{"remainingRequest":"/Users/longhonghong/Documents/HBuilderProjects/open/vue-manage-system-4.2.0/node_modules/babel-loader/lib/index.js!/Users/longhonghong/Documents/HBuilderProjects/open/vue-manage-system-4.2.0/src/components/common/directives.js","dependencies":[{"path":"/Users/longhonghong/Documents/HBuilderProjects/open/vue-manage-system-4.2.0/src/components/common/directives.js","mtime":1594005027000},{"path":"/Users/longhonghong/Documents/HBuilderProjects/open/vue-manage-system-4.2.0/babel.config.js","mtime":1594005027000},{"path":"/Users/longhonghong/Documents/HBuilderProjects/open/vue-manage-system-4.2.0/node_modules/cache-loader/dist/cjs.js","mtime":1659430655912},{"path":"/Users/longhonghong/Documents/HBuilderProjects/open/vue-manage-system-4.2.0/node_modules/babel-loader/lib/index.js","mtime":1659430650484}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport Vue from 'vue'; // v-dialogDrag: 弹窗拖拽属性\n\nVue.directive('dialogDrag', {\n  bind: function bind(el, binding, vnode, oldVnode) {\n    var dialogHeaderEl = el.querySelector('.el-dialog__header');\n    var dragDom = el.querySelector('.el-dialog');\n    dialogHeaderEl.style.cssText += ';cursor:move;';\n    dragDom.style.cssText += ';top:0px;'; // 获取原有属性 ie dom元素.currentStyle 火狐谷歌 window.getComputedStyle(dom元素, null);\n\n    var sty = function () {\n      if (window.document.currentStyle) {\n        return function (dom, attr) {\n          return dom.currentStyle[attr];\n        };\n      } else {\n        return function (dom, attr) {\n          return getComputedStyle(dom, false)[attr];\n        };\n      }\n    }();\n\n    dialogHeaderEl.onmousedown = function (e) {\n      // 鼠标按下，计算当前元素距离可视区的距离\n      var disX = e.clientX - dialogHeaderEl.offsetLeft;\n      var disY = e.clientY - dialogHeaderEl.offsetTop;\n      var screenWidth = document.body.clientWidth; // body当前宽度\n\n      var screenHeight = document.documentElement.clientHeight; // 可见区域高度(应为body高度，可某些环境下无法获取) \n\n      var dragDomWidth = dragDom.offsetWidth; // 对话框宽度\n\n      var dragDomheight = dragDom.offsetHeight; // 对话框高度\n\n      var minDragDomLeft = dragDom.offsetLeft;\n      var maxDragDomLeft = screenWidth - dragDom.offsetLeft - dragDomWidth;\n      var minDragDomTop = dragDom.offsetTop;\n      var maxDragDomTop = screenHeight - dragDom.offsetTop - dragDomheight; // 获取到的值带px 正则匹配替换\n\n      var styL = sty(dragDom, 'left');\n      var styT = sty(dragDom, 'top'); // 注意在ie中 第一次获取到的值为组件自带50% 移动之后赋值为px\n\n      if (styL.includes('%')) {\n        styL = +document.body.clientWidth * (+styL.replace(/\\%/g, '') / 100);\n        styT = +document.body.clientHeight * (+styT.replace(/\\%/g, '') / 100);\n      } else {\n        styL = +styL.replace(/\\px/g, '');\n        styT = +styT.replace(/\\px/g, '');\n      }\n\n      ;\n\n      document.onmousemove = function (e) {\n        // 通过事件委托，计算移动的距离 \n        var left = e.clientX - disX;\n        var top = e.clientY - disY; // 边界处理\n\n        if (-left > minDragDomLeft) {\n          left = -minDragDomLeft;\n        } else if (left > maxDragDomLeft) {\n          left = maxDragDomLeft;\n        }\n\n        if (-top > minDragDomTop) {\n          top = -minDragDomTop;\n        } else if (top > maxDragDomTop) {\n          top = maxDragDomTop;\n        } // 移动当前元素  \n\n\n        dragDom.style.cssText += \";left:\".concat(left + styL, \"px;top:\").concat(top + styT, \"px;\");\n      };\n\n      document.onmouseup = function (e) {\n        document.onmousemove = null;\n        document.onmouseup = null;\n      };\n    };\n  }\n});",{"version":3,"names":["Vue","directive","bind","el","binding","vnode","oldVnode","dialogHeaderEl","querySelector","dragDom","style","cssText","sty","window","document","currentStyle","dom","attr","getComputedStyle","onmousedown","e","disX","clientX","offsetLeft","disY","clientY","offsetTop","screenWidth","body","clientWidth","screenHeight","documentElement","clientHeight","dragDomWidth","offsetWidth","dragDomheight","offsetHeight","minDragDomLeft","maxDragDomLeft","minDragDomTop","maxDragDomTop","styL","styT","includes","replace","onmousemove","left","top","onmouseup"],"sources":["/Users/longhonghong/Documents/HBuilderProjects/open/vue-manage-system-4.2.0/src/components/common/directives.js"],"sourcesContent":["import Vue from 'vue';\r\n\r\n// v-dialogDrag: 弹窗拖拽属性\r\nVue.directive('dialogDrag', {\r\n    bind(el, binding, vnode, oldVnode) {\r\n        const dialogHeaderEl = el.querySelector('.el-dialog__header');\r\n        const dragDom = el.querySelector('.el-dialog');\r\n\r\n        dialogHeaderEl.style.cssText += ';cursor:move;'\r\n        dragDom.style.cssText += ';top:0px;'\r\n\r\n        // 获取原有属性 ie dom元素.currentStyle 火狐谷歌 window.getComputedStyle(dom元素, null);\r\n        const sty = (() => {\r\n            if (window.document.currentStyle) {\r\n                return (dom, attr) => dom.currentStyle[attr];\r\n            } else {\r\n                return (dom, attr) => getComputedStyle(dom, false)[attr];\r\n            }\r\n        })()\r\n\r\n        dialogHeaderEl.onmousedown = (e) => {\r\n            // 鼠标按下，计算当前元素距离可视区的距离\r\n            const disX = e.clientX - dialogHeaderEl.offsetLeft;\r\n            const disY = e.clientY - dialogHeaderEl.offsetTop;\r\n\r\n            const screenWidth = document.body.clientWidth; // body当前宽度\r\n            const screenHeight = document.documentElement.clientHeight; // 可见区域高度(应为body高度，可某些环境下无法获取) \r\n\r\n            const dragDomWidth = dragDom.offsetWidth; // 对话框宽度\r\n            const dragDomheight = dragDom.offsetHeight; // 对话框高度\r\n\r\n            const minDragDomLeft = dragDom.offsetLeft;\r\n            const maxDragDomLeft = screenWidth - dragDom.offsetLeft - dragDomWidth;\r\n\r\n            const minDragDomTop = dragDom.offsetTop;\r\n            const maxDragDomTop = screenHeight - dragDom.offsetTop - dragDomheight;\r\n\r\n\r\n            // 获取到的值带px 正则匹配替换\r\n            let styL = sty(dragDom, 'left');\r\n            let styT = sty(dragDom, 'top');\r\n\r\n            // 注意在ie中 第一次获取到的值为组件自带50% 移动之后赋值为px\r\n            if (styL.includes('%')) {\r\n                styL = +document.body.clientWidth * (+styL.replace(/\\%/g, '') / 100);\r\n                styT = +document.body.clientHeight * (+styT.replace(/\\%/g, '') / 100);\r\n            } else {\r\n                styL = +styL.replace(/\\px/g, '');\r\n                styT = +styT.replace(/\\px/g, '');\r\n            };\r\n\r\n            document.onmousemove = function (e) {\r\n                // 通过事件委托，计算移动的距离 \r\n                let left = e.clientX - disX;\r\n                let top = e.clientY - disY;\r\n\r\n                // 边界处理\r\n                if (-(left) > minDragDomLeft) {\r\n                    left = -(minDragDomLeft);\r\n                } else if (left > maxDragDomLeft) {\r\n                    left = maxDragDomLeft;\r\n                }\r\n\r\n                if (-(top) > minDragDomTop) {\r\n                    top = -(minDragDomTop);\r\n                } else if (top > maxDragDomTop) {\r\n                    top = maxDragDomTop;\r\n                }\r\n\r\n                // 移动当前元素  \r\n                dragDom.style.cssText += `;left:${left + styL}px;top:${top + styT}px;`;\r\n            };\r\n\r\n            document.onmouseup = function (e) {\r\n                document.onmousemove = null;\r\n                document.onmouseup = null;\r\n            };\r\n        }\r\n    }\r\n})\r\n"],"mappings":"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"}]}